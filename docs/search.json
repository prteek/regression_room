[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Prateek",
    "section": "",
    "text": "I am a Lead Data Scientist at Bricklane Technologies. When not dabbling in data analysis, I enjoy spending time reading or running."
  },
  {
    "objectID": "posts/movies-getting-longer/index.html",
    "href": "posts/movies-getting-longer/index.html",
    "title": "Are blockbusters getting (reely) longer ?",
    "section": "",
    "text": "I recently came across an article posing a question:\n\nAre blockbusters getting (reely) longer?\n\nFueled by the buzz around Christopher Nolan’s Oppenheimer being his longest movie (just over 3 hours), I decided to explore this question using publicly available data.\nAs an exercise in inference this question can be answered with some analysis. I fetched top grossing movies in each year from boxoffice mojo and movie details from imdb and combined them to create the following dataset.\ndata\nThe code to download data is also in this very same .qmd file\n\n\n\n\nyearly_top_movies = read_delim('movies_dataset.csv',\n show_col_types = FALSE)\nhead(yearly_top_movies)\n\n# A tibble: 6 × 3\n  release_year runtime_mins title                       \n         &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;                       \n1         1990          103 Home Alone                  \n2         1990          127 Ghost                       \n3         1990          181 Dances with Wolves          \n4         1990          119 Pretty Woman                \n5         1990           93 Teenage Mutant Ninja Turtles\n6         1990          135 The Hunt for Red October    \n\n\n\n# Scatterplot of movie runtime over time\nggplot(yearly_top_movies, aes(x = release_year, y = runtime_mins)) +\n  geom_point() + # Scatter points for movie runtimes\n  geom_text(data = annotations, aes(label = title), color = \"red\", nudge_y = 5) + # Annotate specific movies\n  geom_line(data = mean_df, aes(y = runtime_mins), color = \"brown\") + # Line for yearly mean runtimes\n  ggtitle(\"Top Grossing Movies per Year\") +\n  xlab(\"Release Year\") +\n  ylab(\"Runtime (mins)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo simplify the analysis we can consider more recent releases (2013-2023) and compare them to releases from much older timeframe (1990-2000).  The runtime distributions for movies in these 2 categories is different although not significantly (visually).\n\ntestset &lt;- yearly_top_movies %&gt;%\n    mutate(\n    label = case_when(\n      release_year &gt;= 2013 ~ \"recent\",\n      release_year &lt;= 2000 ~ \"old\",\n      TRUE ~ \"other\"\n    )) %&gt;% filter(label != \"other\")\n\nggplot(testset, aes(x=runtime_mins, fill=label)) + geom_density(alpha=0.3)\n\n\n\n\n\n\n\n\nNow we can compare runtimes between two periods. It would have been a straightforward exercise in testing the hypothesis of difference of means using a t-test had the distributions of runtimes been more normally distributed. \nAdditionally, the cutoff chosen for old (&lt;= 2000) and recent (&gt;=2013) are arbitrary. We would ideally want a more comprehensive statement about movie runtimes increasing over the years. \nNeverthless, as a preliminary (and simple) analysis we can use bootstrap to compare means of runtimes in the above groups.\n\nlibrary(boot)\n\n# Define a function to calculate the difference of means\ndiff_mean &lt;- function(data, indices) {\n  # Resample the data\n  resampled_data &lt;- data[indices, ]\n\n  # Calculate means for each group\n  mean_group1 &lt;- mean(resampled_data$runtime_mins[resampled_data$label == \"old\"])\n  mean_group2 &lt;- mean(resampled_data$runtime_mins[resampled_data$label == \"recent\"])\n\n  # Return the difference of means\n  return(mean_group2 - mean_group1)\n}\n\nset.seed(123)\nbootstrap_results &lt;- boot(data = testset, statistic = diff_mean, R = 1000)\n\n# Print bootstrap results\nprint(bootstrap_results)\n\n\nORDINARY NONPARAMETRIC BOOTSTRAP\n\n\nCall:\nboot(data = testset, statistic = diff_mean, R = 1000)\n\n\nBootstrap Statistics :\n    original     bias    std. error\nt1* 9.697248 0.06394496    3.174053\n\n# Plot bootstrap distribution\nplot(bootstrap_results)\n\n\n\n\n\n\n\n# Calculate confidence interval for the difference of means\nci &lt;- boot.ci(bootstrap_results, type = \"perc\")\nprint(ci)\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = bootstrap_results, type = \"perc\")\n\nIntervals : \nLevel     Percentile     \n95%   ( 3.502, 15.736 )  \nCalculations and Intervals on Original Scale\n\n\nIf we bootstrap the mean of movie times and take the difference between means of recent release years from old, there is evidence that blockbuster movies are getting longer in recent years, and the difference can be up to 10 min on average and can be expected to be between 4 min and 16 min. \nSo on your next visit to the theatre make sure to get some extra popcorn !!!\n\n\n\nIn the want of better precision in identifying the effect of time on movie runtimes, we can formulate a regression problem and estimate the effect of year.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe plot above partly confirms our intuition about the increasing trend of runtime.\n\nlmod &lt;- lm(runtime_mins ~ release_year, yearly_top_movies)\nsummary(lmod)\n\n\nCall:\nlm(formula = runtime_mins ~ release_year, data = yearly_top_movies)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.369 -19.617   0.488  16.422  77.834 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)  -636.1435   271.4520  -2.343  0.01969 * \nrelease_year    0.3791     0.1353   2.802  0.00537 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 24.42 on 335 degrees of freedom\nMultiple R-squared:  0.0229,    Adjusted R-squared:  0.01999 \nF-statistic: 7.852 on 1 and 335 DF,  p-value: 0.005372\n\n\nThe regression above supports the hypothesis that release_year has positively contributed to movie runtimes at approximately 0.38 min/year.  Considering our previous finding on average between 1995 and 2018 the runtime increased by approx. 10 min. From the regression estimate the increase is 0.3791 * (2018-1995) = 8.7 min. \nWe can certainly run some diagnostics to be sure of our model.\n\n\n\n\n\n\n\n\n\nThe residuals appear to have no pattern with fitted values and also have fairly constant variance. There are no significantly high leverage points or outliers.  However, the errors are not quite normally distributed.  This is however, ignored by relying on large sample size and the fact that other diagnostics are fine.  But, there may be some degree of autocorrelation among residuals due to the fact that we’re working with timeseries data. We can test for this autocorrelation and handle it if necessary.\n\n\n[1] \"Auto-correlation among residuals: \" \"0.01\"                              \n\n\n\n    Durbin-Watson test\n\ndata:  runtime_mins ~ release_year\nDW = 1.982, p-value = 0.4126\nalternative hypothesis: true autocorrelation is greater than 0\n\n\nThere doesn’t appear to be significant autocorrelation and other model diagnotics appear to be fine.\n\n\n\n\nThere has been a rather steady increase of 0.38 min/year (on average) in movie runtimes as per the dataset we have used. In effect expect to be seated for about 10 more minutes in your favourite blockbuster compared to when you went to movies as a kid."
  },
  {
    "objectID": "posts/movies-getting-longer/index.html#data",
    "href": "posts/movies-getting-longer/index.html#data",
    "title": "Are blockbusters getting (reely) longer ?",
    "section": "",
    "text": "yearly_top_movies = read_delim('movies_dataset.csv',\n show_col_types = FALSE)\nhead(yearly_top_movies)\n\n# A tibble: 6 × 3\n  release_year runtime_mins title                       \n         &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;                       \n1         1990          103 Home Alone                  \n2         1990          127 Ghost                       \n3         1990          181 Dances with Wolves          \n4         1990          119 Pretty Woman                \n5         1990           93 Teenage Mutant Ninja Turtles\n6         1990          135 The Hunt for Red October    \n\n\n\n# Scatterplot of movie runtime over time\nggplot(yearly_top_movies, aes(x = release_year, y = runtime_mins)) +\n  geom_point() + # Scatter points for movie runtimes\n  geom_text(data = annotations, aes(label = title), color = \"red\", nudge_y = 5) + # Annotate specific movies\n  geom_line(data = mean_df, aes(y = runtime_mins), color = \"brown\") + # Line for yearly mean runtimes\n  ggtitle(\"Top Grossing Movies per Year\") +\n  xlab(\"Release Year\") +\n  ylab(\"Runtime (mins)\")"
  },
  {
    "objectID": "posts/movies-getting-longer/index.html#analysis",
    "href": "posts/movies-getting-longer/index.html#analysis",
    "title": "Are blockbusters getting (reely) longer ?",
    "section": "",
    "text": "To simplify the analysis we can consider more recent releases (2013-2023) and compare them to releases from much older timeframe (1990-2000).  The runtime distributions for movies in these 2 categories is different although not significantly (visually).\n\ntestset &lt;- yearly_top_movies %&gt;%\n    mutate(\n    label = case_when(\n      release_year &gt;= 2013 ~ \"recent\",\n      release_year &lt;= 2000 ~ \"old\",\n      TRUE ~ \"other\"\n    )) %&gt;% filter(label != \"other\")\n\nggplot(testset, aes(x=runtime_mins, fill=label)) + geom_density(alpha=0.3)\n\n\n\n\n\n\n\n\nNow we can compare runtimes between two periods. It would have been a straightforward exercise in testing the hypothesis of difference of means using a t-test had the distributions of runtimes been more normally distributed. \nAdditionally, the cutoff chosen for old (&lt;= 2000) and recent (&gt;=2013) are arbitrary. We would ideally want a more comprehensive statement about movie runtimes increasing over the years. \nNeverthless, as a preliminary (and simple) analysis we can use bootstrap to compare means of runtimes in the above groups.\n\nlibrary(boot)\n\n# Define a function to calculate the difference of means\ndiff_mean &lt;- function(data, indices) {\n  # Resample the data\n  resampled_data &lt;- data[indices, ]\n\n  # Calculate means for each group\n  mean_group1 &lt;- mean(resampled_data$runtime_mins[resampled_data$label == \"old\"])\n  mean_group2 &lt;- mean(resampled_data$runtime_mins[resampled_data$label == \"recent\"])\n\n  # Return the difference of means\n  return(mean_group2 - mean_group1)\n}\n\nset.seed(123)\nbootstrap_results &lt;- boot(data = testset, statistic = diff_mean, R = 1000)\n\n# Print bootstrap results\nprint(bootstrap_results)\n\n\nORDINARY NONPARAMETRIC BOOTSTRAP\n\n\nCall:\nboot(data = testset, statistic = diff_mean, R = 1000)\n\n\nBootstrap Statistics :\n    original     bias    std. error\nt1* 9.697248 0.06394496    3.174053\n\n# Plot bootstrap distribution\nplot(bootstrap_results)\n\n\n\n\n\n\n\n# Calculate confidence interval for the difference of means\nci &lt;- boot.ci(bootstrap_results, type = \"perc\")\nprint(ci)\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = bootstrap_results, type = \"perc\")\n\nIntervals : \nLevel     Percentile     \n95%   ( 3.502, 15.736 )  \nCalculations and Intervals on Original Scale\n\n\nIf we bootstrap the mean of movie times and take the difference between means of recent release years from old, there is evidence that blockbuster movies are getting longer in recent years, and the difference can be up to 10 min on average and can be expected to be between 4 min and 16 min. \nSo on your next visit to the theatre make sure to get some extra popcorn !!!\n\n\n\nIn the want of better precision in identifying the effect of time on movie runtimes, we can formulate a regression problem and estimate the effect of year.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe plot above partly confirms our intuition about the increasing trend of runtime.\n\nlmod &lt;- lm(runtime_mins ~ release_year, yearly_top_movies)\nsummary(lmod)\n\n\nCall:\nlm(formula = runtime_mins ~ release_year, data = yearly_top_movies)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.369 -19.617   0.488  16.422  77.834 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)  -636.1435   271.4520  -2.343  0.01969 * \nrelease_year    0.3791     0.1353   2.802  0.00537 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 24.42 on 335 degrees of freedom\nMultiple R-squared:  0.0229,    Adjusted R-squared:  0.01999 \nF-statistic: 7.852 on 1 and 335 DF,  p-value: 0.005372\n\n\nThe regression above supports the hypothesis that release_year has positively contributed to movie runtimes at approximately 0.38 min/year.  Considering our previous finding on average between 1995 and 2018 the runtime increased by approx. 10 min. From the regression estimate the increase is 0.3791 * (2018-1995) = 8.7 min. \nWe can certainly run some diagnostics to be sure of our model.\n\n\n\n\n\n\n\n\n\nThe residuals appear to have no pattern with fitted values and also have fairly constant variance. There are no significantly high leverage points or outliers.  However, the errors are not quite normally distributed.  This is however, ignored by relying on large sample size and the fact that other diagnostics are fine.  But, there may be some degree of autocorrelation among residuals due to the fact that we’re working with timeseries data. We can test for this autocorrelation and handle it if necessary.\n\n\n[1] \"Auto-correlation among residuals: \" \"0.01\"                              \n\n\n\n    Durbin-Watson test\n\ndata:  runtime_mins ~ release_year\nDW = 1.982, p-value = 0.4126\nalternative hypothesis: true autocorrelation is greater than 0\n\n\nThere doesn’t appear to be significant autocorrelation and other model diagnotics appear to be fine."
  },
  {
    "objectID": "posts/movies-getting-longer/index.html#conclusion",
    "href": "posts/movies-getting-longer/index.html#conclusion",
    "title": "Are blockbusters getting (reely) longer ?",
    "section": "",
    "text": "There has been a rather steady increase of 0.38 min/year (on average) in movie runtimes as per the dataset we have used. In effect expect to be seated for about 10 more minutes in your favourite blockbuster compared to when you went to movies as a kid."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nplot(density(rnorm(100)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Regression Room",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nDec 21, 2024\n\n\nPrateek\n\n\n\n\n\n\n\n\n\n\n\n\nAre blockbusters getting (reely) longer ?\n\n\n\n\n\n\nanalysis\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 21, 2023\n\n\nPrateek\n\n\n\n\n\n\nNo matching items"
  }
]